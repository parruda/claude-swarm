name: Release SwarmCLI Gem

on:
  push:
    branches:
      - main
    paths:
      - 'lib/swarm_cli.rb'
      - 'lib/swarm_cli/**'
      - 'swarm_cli.gemspec'
      - '.github/workflows/release-swarm-cli.yml'

jobs:
  # detect-version-change:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     version_changed: ${{ steps.check.outputs.changed }}
  #     new_version: ${{ steps.check.outputs.version }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 2

  #     - name: Check if version changed
  #       id: check
  #       run: |
  #         CURRENT_VERSION=$(grep "VERSION = " lib/swarm_cli/version.rb | sed -E 's/.*"(.*)"/\1/')
  #         echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

  #         if git diff HEAD^ HEAD -- lib/swarm_cli/version.rb | grep -q "+.*VERSION"; then
  #           echo "changed=true" >> $GITHUB_OUTPUT
  #           echo "Version changed to $CURRENT_VERSION"
  #         else
  #           echo "changed=false" >> $GITHUB_OUTPUT
  #           echo "Version unchanged, skipping release"
  #         fi

  release:
    # needs: detect-version-change
    # if: needs.detect-version-change.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true

    - name: Install ripgrep
      run: sudo apt-get update && sudo apt-get install -y ripgrep

    - name: Run SwarmCLI tests
      run: bundle exec rake swarm_cli:test

    - name: Run SwarmCLI linter
      run: bundle exec rake swarm_cli:rubocop

    - name: Build swarm_cli gem
      run: gem build swarm_cli.gemspec

    - name: Verify gem contents
      run: |
        echo "Gem contents:"
        tar -tzf swarm_cli-*.gem | grep -E "\.(rb|md)$" | head -20
        echo ""
        echo "Verifying no claude_swarm code included:"
        if tar -tzf swarm_cli-*.gem | grep -q "lib/claude_swarm"; then
          echo "ERROR: swarm_cli gem contains claude_swarm code!"
          exit 1
        fi
        echo "✓ No claude_swarm code found"
        echo ""
        echo "Verifying swarm_sdk is not bundled:"
        if tar -tzf swarm_cli-*.gem | grep -q "lib/swarm_sdk"; then
          echo "ERROR: swarm_cli gem contains swarm_sdk code!"
          exit 1
        fi
        echo "✓ No swarm_sdk code found (dependency only)"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: swarm_cli-v${{ needs.detect-version-change.outputs.new_version }}
        name: SwarmCLI v${{ needs.detect-version-change.outputs.new_version }}
        body: |
          SwarmCLI v${{ needs.detect-version-change.outputs.new_version }}

          Beautiful command-line interface for SwarmSDK with TTY toolkit integration.

          See [CHANGELOG.md](https://github.com/parruda/claude-swarm/blob/main/CHANGELOG.md) for details.
        files: swarm_cli-*.gem
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to RubyGems
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        gem push swarm_cli-*.gem
      env:
        GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_AUTH_TOKEN }}
